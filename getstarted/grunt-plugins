<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
<style>
@import url(https://fonts.googleapis.com/earlyaccess/nanumgothic.css); /* 나눔고딕 : 'Nanum Gothic' */
</style>
<title>WebFrameworks.kr - Grunt Plugins</title>
<link rel="stylesheet" href="/static/css/bootstrap.min.css">
<link rel="stylesheet" href="/static/css/main.css">
<link rel="stylesheet" href="/static/css/syntax.css">
<link rel="stylesheet" href="//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css">
<script src="/static/js/jquery.min.js"></script>
<script src="/static/js/bootstrap.min.js"></script>

    <link rel="stylesheet" href="/static/css/toc.css">
    <script type="text/javascript" src="/static/js/jquery.toc.js"></script>
    <style>
        #toc_location.affix {
            top:50px;
        }
    </style>
</head>
<body>
<nav class="navbar navbar-default top_menu" role="navigation">
    <div class="container-fluid">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navbar-collapse-1">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a class="navbar-brand" href="/">웹Frameworks</a>
        </div>

        <div class="collapse navbar-collapse" id="navbar-collapse-1">
            <ul class="nav navbar-nav navbar-left">
                <li><a href="/getstarted">Get Started</a></li>
            </ul>
            <ul class="nav navbar-nav navbar-left">
                <li><a href="/updates">Update</a></li>
            </ul>
            <ul class="nav navbar-nav navbar-left">
                <li><a href="/tutorials">Tutorials</a></li>
            </ul>
            <ul class="nav navbar-nav navbar-left">
                <li><a href="/quickstart">Quick Start</a></li>
            </ul>
            <ul class="nav navbar-nav navbar-left">
                <li><a href="/archives">Archives</a></li>
            </ul>
            <ul class="nav navbar-nav navbar-left">
                <li><a href="https://github.com/KoreaHTML5/webframeworks.kr/blob/master/CONTRIBUTE.md" target="_blank">참여하기</a></li>
            </ul>
            <ul class="nav navbar-nav navbar-left">
                <li><a href="http://goo.gl/forms/MB9ZxVvdrD" target="_blank">설문하기</a></li>
            </ul>
        </div>
    </div>
</nav>


<div class="content_bg"  style="background-color: #FEFEFE;color: #;" >
    <div class="col-md-10 col-md-offset-1 title_header jumbotron"  style="background:url() no-repeat center"  >
        <h1 class="title_header_title">Grunt Plugins</h1>
        <p class="title_header_summary">Grunt 에서 사용되는 Plugins 의 기본적인 사용법과 대표적인 Plugins 에 대해서 소개합니다.</p>
    </div>
</div>

<div>

    <div class="col-sm-3 col-md-2 col-md-offset-2">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h3 class="panel-title">작성자</h3>
            </div>
            <div class="panel-body">
                <div class="media">
                    <a class="pull-left" href="#">
                        <img class="media-object profile_img" src="https://avatars2.githubusercontent.com/u/124117?v=2&s=460" alt="문현경">
                    </a>
                    <div class="media-body">
                        <h4 class="media-heading">
                            문현경

                        </h4>
                        ragingwind<br>
                    </div>
                </div>
            </div>
        </div>

        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">Tags</h3>
    </div>
    <div class="panel-body">
        <a href='/tags/jquery/' style='color: rgba(0,0,0,0.065810)'>jquery</a>
<a href='/tags/javascript/' style='color: rgba(0,0,0,7.963043)'>javascript</a>
<a href='/tags/html/' style='color: rgba(0,0,0,0.065810)'>html</a>
<a href='/tags/grunt/' style='color: rgba(0,0,0,0.065810)'>grunt</a>
<a href='/tags/gulp/' style='color: rgba(0,0,0,0.065810)'>gulp</a>
<a href='/tags/build/' style='color: rgba(0,0,0,0.394862)'>build</a>
<a href='/tags/yeoman/' style='color: rgba(0,0,0,0.065810)'>yeoman</a>
<a href='/tags/foundation/' style='color: rgba(0,0,0,0.065810)'>foundation</a>
<a href='/tags/bower/' style='color: rgba(0,0,0,0.131621)'>bower</a>
<a href='/tags/twitter/' style='color: rgba(0,0,0,0.131621)'>twitter</a>
<a href='/tags/framework/' style='color: rgba(0,0,0,2.500791)'>framework</a>
<a href='/tags/angularjs/' style='color: rgba(0,0,0,1.118775)'>angularjs</a>
<a href='/tags/tutorials/' style='color: rgba(0,0,0,1.447826)'>tutorials</a>
<a href='/tags/backbone/' style='color: rgba(0,0,0,0.263241)'>backbone</a>
<a href='/tags/getstarted/' style='color: rgba(0,0,0,0.197431)'>getstarted</a>
<a href='/tags/underscore/' style='color: rgba(0,0,0,0.065810)'>underscore</a>
<a href='/tags/library/' style='color: rgba(0,0,0,0.460672)'>library</a>
<a href='/tags/Ext/' style='color: rgba(0,0,0,0.592292)'>Ext</a>
<a href='/tags/JS/' style='color: rgba(0,0,0,0.921344)'>JS</a>
<a href='/tags/tutorial/' style='color: rgba(0,0,0,0.855534)'>tutorial</a>
<a href='/tags/modernizr/' style='color: rgba(0,0,0,0.065810)'>modernizr</a>
<a href='/tags/bootstrap/' style='color: rgba(0,0,0,0.197431)'>bootstrap</a>
<a href='/tags/quickstart/' style='color: rgba(0,0,0,0.065810)'>quickstart</a>
<a href='/tags/angular-di/' style='color: rgba(0,0,0,0.065810)'>angular-di</a>
<a href='/tags/animation/' style='color: rgba(0,0,0,0.263241)'>animation</a>
<a href='/tags/router/' style='color: rgba(0,0,0,0.065810)'>router</a>
<a href='/tags/promise/' style='color: rgba(0,0,0,0.329051)'>promise</a>
<a href='/tags/responsive/' style='color: rgba(0,0,0,0.065810)'>responsive</a>
<a href='/tags/form/' style='color: rgba(0,0,0,0.131621)'>form</a>
<a href='/tags/validation/' style='color: rgba(0,0,0,0.131621)'>validation</a>
<a href='/tags/map/' style='color: rgba(0,0,0,0.065810)'>map</a>
<a href='/tags/direcitve/' style='color: rgba(0,0,0,0.065810)'>direcitve</a>
<a href='/tags/file/' style='color: rgba(0,0,0,0.131621)'>file</a>
<a href='/tags/test/' style='color: rgba(0,0,0,0.263241)'>test</a>
<a href='/tags/ui-bootstrap/' style='color: rgba(0,0,0,0.065810)'>ui-bootstrap</a>
<a href='/tags/twitter-bootstrap/' style='color: rgba(0,0,0,0.065810)'>twitter-bootstrap</a>
<a href='/tags/express/' style='color: rgba(0,0,0,0.131621)'>express</a>
<a href='/tags/express.js/' style='color: rgba(0,0,0,0.065810)'>express.js</a>
<a href='/tags/node.js/' style='color: rgba(0,0,0,0.197431)'>node.js</a>
<a href='/tags/backend/' style='color: rgba(0,0,0,0.197431)'>backend</a>
<a href='/tags/d3.js/' style='color: rgba(0,0,0,0.065810)'>d3.js</a>
<a href='/tags/visualization/' style='color: rgba(0,0,0,0.065810)'>visualization</a>
<a href='/tags/reactjs/' style='color: rgba(0,0,0,0.131621)'>reactjs</a>
<a href='/tags/expressjs/' style='color: rgba(0,0,0,0.460672)'>expressjs</a>
<a href='/tags/react/' style='color: rgba(0,0,0,1.447826)'>react</a>
<a href='/tags/session/' style='color: rgba(0,0,0,0.131621)'>session</a>
<a href='/tags/meteor/' style='color: rgba(0,0,0,0.921344)'>meteor</a>
<a href='/tags/SEO/' style='color: rgba(0,0,0,0.065810)'>SEO</a>
<a href='/tags/REST/' style='color: rgba(0,0,0,0.065810)'>REST</a>
<a href='/tags/API/' style='color: rgba(0,0,0,0.065810)'>API</a>
<a href='/tags/es2015/' style='color: rgba(0,0,0,0.131621)'>es2015</a>
<a href='/tags/es6/' style='color: rgba(0,0,0,0.723913)'>es6</a>
<a href='/tags/es7/' style='color: rgba(0,0,0,0.131621)'>es7</a>
<a href='/tags/DDP/' style='color: rgba(0,0,0,0.065810)'>DDP</a>
<a href='/tags/ngMessages/' style='color: rgba(0,0,0,0.131621)'>ngMessages</a>
<a href='/tags/jsx/' style='color: rgba(0,0,0,0.065810)'>jsx</a>
<a href='/tags/publish/' style='color: rgba(0,0,0,0.065810)'>publish</a>
<a href='/tags/subscribe/' style='color: rgba(0,0,0,0.065810)'>subscribe</a>
<a href='/tags/meteor.js/' style='color: rgba(0,0,0,0.065810)'>meteor.js</a>
<a href='/tags/reactive/' style='color: rgba(0,0,0,0.065810)'>reactive</a>
<a href='/tags/package/' style='color: rgba(0,0,0,0.065810)'>package</a>
<a href='/tags/static/' style='color: rgba(0,0,0,0.065810)'>static</a>
<a href='/tags/assets/' style='color: rgba(0,0,0,0.065810)'>assets</a>
<a href='/tags/public/' style='color: rgba(0,0,0,0.065810)'>public</a>
<a href='/tags/flux/' style='color: rgba(0,0,0,0.263241)'>flux</a>
<a href='/tags/redux/' style='color: rgba(0,0,0,0.460672)'>redux</a>
<a href='/tags/server/' style='color: rgba(0,0,0,0.065810)'>server</a>
<a href='/tags/distribution/' style='color: rgba(0,0,0,0.065810)'>distribution</a>
<a href='/tags/webpack/' style='color: rgba(0,0,0,0.197431)'>webpack</a>
<a href='/tags/development/' style='color: rgba(0,0,0,0.065810)'>development</a>
<a href='/tags/optimization/' style='color: rgba(0,0,0,0.065810)'>optimization</a>
<a href='/tags/immutable/' style='color: rgba(0,0,0,0.065810)'>immutable</a>
<a href='/tags/orm/' style='color: rgba(0,0,0,0.263241)'>orm</a>
<a href='/tags/database/' style='color: rgba(0,0,0,0.263241)'>database</a>
<a href='/tags/hapi.js/' style='color: rgba(0,0,0,0.065810)'>hapi.js</a>
<a href='/tags/hapi/' style='color: rgba(0,0,0,0.263241)'>hapi</a>
<a href='/tags/ionic/' style='color: rgba(0,0,0,0.131621)'>ionic</a>
<a href='/tags/hybrid-app/' style='color: rgba(0,0,0,0.065810)'>hybrid-app</a>
<a href='/tags/django/' style='color: rgba(0,0,0,0.065810)'>django</a>
<a href='/tags/fullstack/' style='color: rgba(0,0,0,0.065810)'>fullstack</a>
<a href='/tags/spa/' style='color: rgba(0,0,0,0.065810)'>spa</a>
<a href='/tags/ExpressJS/' style='color: rgba(0,0,0,0.329051)'>ExpressJS</a>
<a href='/tags/NodeJS/' style='color: rgba(0,0,0,0.329051)'>NodeJS</a>
<a href='/tags/Sequelize/' style='color: rgba(0,0,0,0.329051)'>Sequelize</a>
<a href='/tags/Mocha/' style='color: rgba(0,0,0,0.329051)'>Mocha</a>
<a href='/tags/Supertest/' style='color: rgba(0,0,0,0.329051)'>Supertest</a>
<a href='/tags/UnitTest/' style='color: rgba(0,0,0,0.329051)'>UnitTest</a>
<a href='/tags/this/' style='color: rgba(0,0,0,0.131621)'>this</a>
<a href='/tags/dom/' style='color: rgba(0,0,0,0.065810)'>dom</a>
<a href='/tags/es5/' style='color: rgba(0,0,0,0.131621)'>es5</a>
<a href='/tags/virtualdom/' style='color: rgba(0,0,0,0.131621)'>virtualdom</a>
<a href='/tags/modules/' style='color: rgba(0,0,0,0.065810)'>modules</a>
<a href='/tags/asynchronous/' style='color: rgba(0,0,0,0.065810)'>asynchronous</a>
<a href='/tags/semicolon/' style='color: rgba(0,0,0,0.065810)'>semicolon</a>
<a href='/tags/nodejs/' style='color: rgba(0,0,0,0.065810)'>nodejs</a>
<a href='/tags/ECMAScript2015/' style='color: rgba(0,0,0,0.131621)'>ECMAScript2015</a>
<a href='/tags/babel/' style='color: rgba(0,0,0,0.065810)'>babel</a>
<a href='/tags/angular,/' style='color: rgba(0,0,0,0.065810)'>angular,</a>
<a href='/tags/electron/' style='color: rgba(0,0,0,0.065810)'>electron</a>
<a href='/tags/D3/' style='color: rgba(0,0,0,0.065810)'>D3</a>
<a href='/tags/node/' style='color: rgba(0,0,0,0.131621)'>node</a>
<a href='/tags/aws/' style='color: rgba(0,0,0,0.131621)'>aws</a>
<a href='/tags/dynamoDB/' style='color: rgba(0,0,0,0.065810)'>dynamoDB</a>
<a href='/tags/chrome/' style='color: rgba(0,0,0,0.065810)'>chrome</a>
<a href='/tags/native/' style='color: rgba(0,0,0,0.131621)'>native</a>
<a href='/tags/markdown/' style='color: rgba(0,0,0,0.065810)'>markdown</a>
<a href='/tags/vue/' style='color: rgba(0,0,0,1.579447)'>vue</a>
<a href='/tags/middleware/' style='color: rgba(0,0,0,0.065810)'>middleware</a>
<a href='/tags/IoT/' style='color: rgba(0,0,0,0.065810)'>IoT</a>
<a href='/tags/docker/' style='color: rgba(0,0,0,0.065810)'>docker</a>
<a href='/tags/serverless/' style='color: rgba(0,0,0,0.065810)'>serverless</a>

    </div>
</div>

        <div id="toc_location" style="z-index:99999;"></div>

    </div>

    <div class="col-sm-9 col-md-6">
        <div class="media_content media_item shadow_panel" id="main_content">
            <h1>Grunt plugins</h1>

<p>Grunt 는 폭넓게 사용되는 프론트엔드 빌드 시스템입니다. Grunt 는 설치된 <code>grunt-cli</code> 가 현재 로컬에 설치된 <code>Grunt</code> 를 구동 시키고 <code>Gruntfile</code> 에 적용된 설정을 읽어 들인후 <code>테스크(Task)</code> 를 실행 시킵니다. 먼저 기본적인 Grunt 에 대한 내용이 필요하다면 아래 자료를 참고하세요.</p>

<ul>
<li><a href="/getstarted/grunt-and-gulp/">Get started Grunt and Gulp</a></li>
</ul>

<p>각 테스크는 <code>플러그인(Plugin)</code> 형태로 제공되며 <code>npm</code> 을 통해서 설치되어야 합니다. 이후 <code>Gruntfile</code> 에서 <code>loadNpmTasks</code> API 를  호출하거나 <a href="http://goo.gl/vGpja0">load-grunt-tasks</a> 를 이용해서 설치된 테스크를 로딩합니다. 로딩된 테스크는 <code>grunt.initConfig</code> 함수에 전달된 오프젝트 안의 <code>옵션(options)</code> 과 타켓(targets, sub-properties)` 값을 사용해서 실행됩니다.</p>

<h2>Grunt configuration</h2>

<p>이제 간단한 <code>Gruntfile</code> 의 예제를 통해서 플러그인으로 설치된 테스크를 설정하고 사용해보도록 하겠습니다. 우리는 아래와 같은 두 테스크를 사용해서 js 파일을 uglify 하고 두개로 나누어져 있는 js 파일을 합쳐보도록 하겠습니다. 먼저 두 테스크를 다음 명령으로 npm 을 통해서 설치하도록 합니다. 여기서는 <code>grunt-init</code> 를 이용해서 시작하는 것보다는 보다 쉬운 설명을 위해서 단계별로 차례차례 만들어 보겠습니다. (Note: <code>grunt-contrib</code> 는 Grunt team 에서 사용하는 공식적인 플러그인입니다.) 여기서 먼저 packasge.json 이 존재 하여야 합니다. 만약 존재 하지 않는다면 <code>npm init</code> 이나 다른 방법을 사용하여 만들도록 합니다.</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">npm install grunt-contrib-uglify grunt-contrib-concat --save
</code></pre></div>
<p>먼저 <code>Gruntfile</code> 을 생성합니다. 확장자는 .js 를 사용합니다.</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">touch Gruntfile.js
</code></pre></div>
<p>이제 설정을 위해서 설정 코드를 입력하겠습니다. 먼저 Gruntfile.js 는 <code>module.exports = function(grunt) {}</code> 라는 wrapper 함수내에 관련 코드를 구현하도록 되어 있습니다. exports 된 함수를 grunt 에서 사용하게 됩니다.</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">module.exports = function(grunt) {
};
</code></pre></div>
<p>이제 wrapper 함수에 <code>grunt.initConfig</code> 함수를 호출하여 사용할 task 에서 사용할 옵션과 타켓에 대한 설정을 할 수 있습니다. 지금은 먼저 사용할 테스크만 명시하도록 하겠습니다.</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">module.exports = function(grunt) {
  grunt.initConfig({
    concat: {
      // concat task 설정을 할 것입니다.
    },
    uglify: {
      // uglify task 설정을 할 것입니다.
    }
  });
};
</code></pre></div>
<p>다음 설치된 플러그인을 로딩하는 <code>grunt.loadNpmTasks</code> API 를 이용하여 설치한 각 테스크를 불러오록 하겠습니다. (&#39;grunt-contrib-uglify&#39;);</p>

<h2>대표적인 Grunt 테크크의 예제 설명</h2>

<h2>기본적인 테스크의 흐름.</h2>

<p>Yeoman 은 이후에 별도로 빼자..</p>

<p>npm install
&quot;grunt-contrib-jshint&quot;: &quot;~0.10.0&quot;,
&quot;grunt-contrib-nodeunit&quot;: &quot;~0.4.1&quot;,
&quot;grunt-contrib-uglify&quot;: &quot;~0.5.0&quot;
```</p>

<p><a href="http://goo.gl/ky0Q3V">Configuring tasks - Grunt: The JavaScript Task Runner</a></p>
<div class="highlight"><pre><code class="language-text" data-lang="text">// &quot;wrapper&quot; function
module.exports = function(grunt) {

  // 프로젝트 설정
  grunt.initConfig({
    pkg: grunt.file.readJSON(&#39;package.json&#39;),
    uglify: {
      options: {
        banner: &#39;/*! &lt;%= pkg.name %&gt; &lt;%= grunt.template.today(&quot;yyyy-mm-dd&quot;) %&gt; */\n&#39;
      },
      build: {
        src: &#39;src/&lt;%= pkg.name %&gt;.js&#39;,
        dest: &#39;build/&lt;%= pkg.name %&gt;.min.js&#39;
      }
    }
  });

  // uglify 플러그인 로딩
  grunt.loadNpmTasks(&#39;grunt-contrib-uglify&#39;);

  // Grunt 기본 테스트(Default task)
  grunt.registerTask(&#39;default&#39;, [&#39;uglify&#39;]);
};
</code></pre></div>
<p><code>wrapper</code> 함수 안에는 <code>grunt.initConfig</code> 함수를 통해서 설치되어서 등록된 테스크에서 사용될 <code>플로그인(Plugin)</code></p>

<p>웹 개발, 특히 프론트엔드 개발의 트렌드는 굉장히 빠르게 진행되고 있습니다. 다양한 기술, 테그닉이 만들어지고 그에 따라서 다양한 개발툴들이 개발되고 있습니다. 웹브라우즈에 로딩되기전에 소스의 문법을 검사하거나 SASS, Coffee-script 와 같은 컴파일이 필요한 언어나 프레임워크, 퍼포먼스를 위해서 이미지나 파일의 최적화를 도와주고 테스트 작업을 자동화를 도와줍니다. 많은 부분에서 자동화를 요구하게 되었고 점점 더 발전하여 프론트엔드 개발에서도 <code>빌드과정(Build process)</code>이 필요하게 되었으며 이를 맡아줄 빌드 시스템이 필요하게 되었습니다. <code>빌드과정</code>은 크게 아래와 같은 <code>테스크(task)</code> 로 이루어져 있습니다.</p>

<ul>
<li>concat(enate): 여러개로 나누어진 관련된 파일을 병합한다.</li>
<li>lint: 빌드과정에서 문법과 코딩스타일의 오류를 잡아낸다.</li>
<li>mifify/unglify: 특히 Javascript 파일의 최적화를 도와준다. 자세한 사항은 <a href="http://goo.gl/V3Emke">위키피디아의 Minification</a> 을 참고한다.</li>
<li>image optimization: 이미지 최적화툴 사용의 자동화를 도와준다.</li>
<li>testing: jasmine, mocha 와 같은 테스팅의 자동화를 도와준다.</li>
<li>watch: 파일의 변경사항을 추적해서 추가 작업을 지정한다.</li>
<li>serve/preview: 내장된 서버와 Livereload / Browsersync 와 같은 툴을 이용해서 자동으로 리로딩 하여 변경된 사항을 바로 볼 수 있다.</li>
</ul>

<p>지금은 크게 <a href="http://goo.gl/pTSlf">Grunt</a> 와 <a href="http://goo.gl/2OPX57">Gulp</a> 가 사용되어지고 있습니다. Grunt 는 jQuery plugins 개발을 손쉽게 하려는 노력에서 개발되었으며 현재 많은 프론트엔드, Nodejs 프로젝트에서 사용중입니다. Gulp 의 경우 상대적으로 Grunt 에 비해서 발표된 기간은 짧지만 빠르게 성장하는 프로젝트입니다. 이 문서에서는 각 <code>빌드</code> 시스템에 대한 소개와 간단한 사용법을 알아보도록 하겠습니다.</p>

<h2>Prerequirements</h2>

<p>여기에 소개되는 모든 툴은 Nodejs 를 기본으로 사용하고 있습니다. Nodejs 를 최신으로 먼저 설치하세요. 설치후 아래 명령을 통해서 버전을 검사합니다.</p>
<div class="highlight"><pre><code class="language-text" data-lang="text"># node 는 v0.10.1 이상, npm 은 v1.4.x 를 권장합니다.
node --version &amp;&amp; npm --version
</code></pre></div>
<h2>Grunt and Gulp installation</h2>

<p>Nodejs 를 설치하셨다면 Grunt 와 Gulp 를 먼저 시스템에 설치합니다. 설치한 다음 버전을 확인하도록 합니다.</p>
<div class="highlight"><pre><code class="language-text" data-lang="text"># 현재는 같이 설치하지만 필요에 따라서 따로 설치하셔도 됩니다. 이미 설치하셨다면 update 를 통해서 최신 버전을 설치하세요.
npm install -g grunt-cli gulp

# gulp 경우 global / local 버전이 따로 존재 함으로 두개가 보입니다.
grunt --version &amp;&amp; gulp --version
</code></pre></div>
<h2><a href="http://goo.gl/pTSlf">Grunt</a></h2>

<h3>Grunt 의 동작</h3>

<p>이 문서에서 다루는 Grunt 는 버전 0.4 를 다룹니다. 0.4 버전 부터는 Nodejs 의 <code>require()</code> 명령을 통해서 현재 로컬에 설치된 grunt 를 실행시키는 구조로 되어 있습니다. 이유는 여러버전의 grunt 의 기능을 잘 지원하기 위함입니다. Grunt CLI 에서 실행된 grunt 는 Gruntfile.js 를 로드하여 동작하도록 되어 있습니다.</p>

<h3>Grunt 프로젝트</h3>

<p>Grunt 는 각각의 프로젝트별로 특정 버전의 로컬 <code>grunt 러너 (runner)</code> 가 설치되어야 합니다. 또한 사용되는 테스크별로 Grunt 플러그인(plugin) 을 설치하거나 package.json 을 통해서 Grunt 에서 사용하는 플러그인을 설치 할 수 있도록 package.json[1] 을 제공해야 합니다. package.json 이 존재한다면 특정 버전의 Grunt 와 플러그 인을 <code>npm install</code> 명령을 통해서 설치하도록 합니다. 만약 새로운 프로젝트 라면 <code>npm install grunt-PLUGINS --save-dev</code> 명령을 통하여 설치 할 수 있습니다. 아래는 package.json 의 예제입니다. grunt 는 0.4.5 버전 이상을 사용하며 jshint, nodeunit, uglify Grunt 플러그인을 사용하고 있습니다.</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">{
  &quot;name&quot;: &quot;my-project-name&quot;,
  &quot;version&quot;: &quot;0.1.0&quot;,
  &quot;devDependencies&quot;: {
    &quot;grunt&quot;: &quot;~0.4.5&quot;,
    &quot;grunt-contrib-jshint&quot;: &quot;~0.10.0&quot;,
    &quot;grunt-contrib-nodeunit&quot;: &quot;~0.4.1&quot;,
    &quot;grunt-contrib-uglify&quot;: &quot;~0.5.0&quot;
  }
}
</code></pre></div>
<p>package.json 에 대해서 추가적인 정보는 아래 자료를 참고하세요.</p>

<ul>
<li><a href="http://goo.gl/Ku6ggw">package.json으로 npm 의존성 모듈 관리하기 :: Outsider&#39;s Dev Story</a></li>
</ul>

<h3>Grunt 플러그인 (Plugins)</h3>

<p>Grunt 는 자체에는 내장된 테스크가 없습니다. 모두 외부 플러그인을 통해서 설치하셔야 합니다. Grunt 를 사용하는 존재하는 프로젝트에는 반드시 package.json 이 있으며 사용된 플러그인의 종류를 알 수 있으며 <code>npm install</code> 명령을 통해서 설치가 가능합니다. 현재 개발되어 사용되는 플러그인 들은 아래 페이지에서 찾을 수 있습니다. 플러그인 이름에 <code>contrib</code> 가 존재한다면 해당 커뮤니티에서 관리하는 신뢰성이 높은 플러그인입니다.</p>

<ul>
<li><a href="http://goo.gl/WXA85">Plugins - Grunt: The JavaScript Task Runner</a></li>
</ul>

<h3>Gruntfile.js</h3>

<p>Grunt 는 Gruntfile.js 파일안의 설정에 기반하여 동작하는 `<code>테스크러너 (Javascript task runner)</code> 입니다. 로컬 grunt 러너와 플러그인을 설치하였다면 원하는 작업을 Gruntfile.js 에 설정해서 사용할 수 있습니다. Gruntfile.js 는 프로젝트의 루트에 존재하고 아래처럼 구성되어 있습니다.</p>

<ul>
<li>&quot;wrapper&quot; function</li>
<li>프로젝트와 테스크 설정</li>
<li>플러그인 로딩</li>
<li>커스텀 테스크</li>
</ul>

<p>아래 Gruntfile.js 예제를 통해서 각 구성요소들에 대해서 자세히 설명하도록 하겠습니다.</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">// &quot;wrapper&quot; function
module.exports = function(grunt) {

  // 프로젝트 설정
  grunt.initConfig({
    pkg: grunt.file.readJSON(&#39;package.json&#39;),
    uglify: {
      options: {
        banner: &#39;/*! &lt;%= pkg.name %&gt; &lt;%= grunt.template.today(&quot;yyyy-mm-dd&quot;) %&gt; */\n&#39;
      },
      build: {
        src: &#39;src/&lt;%= pkg.name %&gt;.js&#39;,
        dest: &#39;build/&lt;%= pkg.name %&gt;.min.js&#39;
      }
    }
  });

  // uglify 플러그인 로딩
  grunt.loadNpmTasks(&#39;grunt-contrib-uglify&#39;);

  // Grunt 기본 테스트(Default task)
  grunt.registerTask(&#39;default&#39;, [&#39;uglify&#39;]);
};
</code></pre></div>
<h4>&quot;wrapper&quot; function</h4>

<p>모든 Gruntfile.js 에는 기본적으로 아래 코드가 들어가 있습니다. Grunt 관련 코드는 아래 함수 안에 반드시 구현되어야 합니다.</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">module.exports = function(grunt) {
  // 여기에 Grunt 코드 구현
};
</code></pre></div>
<h4>프로젝트와 테스크 설정</h4>

<p>Grunt 설정은 <code>grunt.initConfig</code> 함수에 오브젝트 형태로 전달됩니다. 샘플에서와 같이 <code>grunt.initConfig</code> 함수의 인자에 있는 오브젝트를 보면 <code>pkg</code> 필드에 Grunt API 인 <code>grunt.file.readJSON</code> 를 이용하여 package.json 읽어 들여서 얻은 메타데이터를 저장합니다. Grunt API 에 대해서 더 자세한 사항은 아래 자료를 참고하세요.</p>

<ul>
<li><a href="http://goo.gl/uUm2hq">grunt - Grunt: The JavaScript Task Runner</a></li>
</ul>

<p>예제에 설정된 테스트는 <code>grunt-contrib-uglify</code> 입니다. <code>uglify</code> 테스크를 예제처럼 설정하고 Grunt 를 실행하면 <code>uglify</code> 테스크는 Javascript 코드를 압축하거나 변수이름과 같은 코드를 짧게 만들어서 코드의 양을 줄여주는 작업을 실행합니다. <code>uglify</code> 테스크는 테스크내에 전역적인 <code>options</code> 를 가지고 있으며 하나의 <code>build</code> 라는 타겟(target) 으로 구성되어 있습니다. <code>build</code> 타켓 설정에는 <code>uglify</code> 테스크 실행시에 필요한 소스파일 (src) 과 저장할 대상파일 (dest) 에 대한 경로값을 가지고 있습니다. <code>pkg</code> 에 존재하는 메타데이터에서 <code>name</code> 값을 이용하고 있습니다. 예제에서는 <code>banner</code>(소스파일 상단에 문구추가)을 추가로 진행합니다.</p>

<h4>플러그인 로딩</h4>

<p>설정된 테스크들이 실행이 되려면 설치된 플러그인을 로딩하는 작업을 추가 해야 합니다. `<code>npm install</code> 을 통해서 설치가 되어 있어야 하고 아래 Grunt API 로 불러 올 수 있습니다.</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">grunt.loadNpmTasks(&#39;grunt-contrib-uglify&#39;);
</code></pre></div>
<h4>커스텀 테스크</h4>

<p>Gruntfile.js 에 존재하는 모든 테스크들은 Grunt 플러그인(plugins) 과 <code>커스텀 테스트(Custom task)</code> 두가지로 구성됩니다. 이후 <code>grunt</code> 또는 <code>grunt 테스크이름</code> 같은 형태로 Grunt 테스크를 실행 시킬 수 있습니다. 테스크 이름이 없이 실행한다면 Grunt 는 <code>default</code> 테스크를 찾아 실행 할 것입니다.</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">## default grunt task 실행
grunt

## 특정 grunt task 실행
grunt uglify
</code></pre></div>
<p>커스텀 테스크는 <code>grunt.registerTask</code> API 를 통해서 추가가 가능합니다. 예제에서는 <code>default</code> 커스텀 테스트를 아래처럼 구현했으며 실제로는 <code>grunt uglify</code> 와 동일한 작업을 수행합니다.</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">grunt.registerTask(&#39;default&#39;, [&#39;uglify&#39;]);
</code></pre></div>
<p>또한 커스텀 테스크는 설정된 테스크외에 아래처럼 함수객체를 인자로 받는 형태로도 구성이 가능합니다. 여러가지 조건에 따라서 실행 할 수 있는 커스텀 테스크를 만들 수가 있습니다. 아래 코드로 등록된 테스크는 <code>grunt log</code> 로 실행 가능합니다.</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">grunt.registerTask(&#39;log&#39;, &#39;Log some stuff.&#39;, function() {
    grunt.log.write(&#39;Logging some stuff...&#39;).ok();
  });
</code></pre></div>
<h2><a href="http://goo.gl/pTSlf">Gulp</a></h2>

<h3>Gulp vs Grunt</h3>

<p>Gulp 는 Nodejs 의 <code>스트림(Stream)</code> 을 기반으로 하는 빌드시스템입니다. 예를 들어서 읽어들인 파일의 내용을 <code>pipe</code> 로 바로 다른 테스크에 전달이 가능한 구조입니다. (Grunt 0.5 에서는 Grunt 도 변경될 예정입니다.) 또 다른 차이점은 설정 기반이 아니라 Javascript (Nodejs) 코드로 테스크의 작업을 실행 시킬수 있습니다. 작업이 많아지게 되면 복잡도가 많이 올라가는 설정파일 기반의  Grunt 와 달리 Gulp 는 Javascript (Nodejs) 코딩을 할 줄 아는 사람이면 쉽게 접근할 수 있는 것이 장점입니다. 또한 Grunt 는 내장된 테스크가 없는 반면에 Gulp 는 기본적인 테스크에 대해서는 지원합니다. 따라서 전역으로 설치하였다면 별도의 설치과정이 필요 없습니다.</p>

<p>아래 예제는 각각의 빌드 시스템에서 사용되는 테스크 관련 파일입니다. <code>less</code> 와 <code>autoprefixer</code> 작업들을 실행하는 것을 유의해서 비교해 보세요. 먼저 Gruntfile.js 입니다.</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">// Gruntfile.js
grunt.initConfig({
   less: {
      development: {
         files: {
            &quot;build/tmp/app.css&quot;: &quot;assets/app.less&quot;
         }
      }
   },

   autoprefixer: {
      options: {
         browsers: [&#39;last 2 version&#39;, &#39;ie 8&#39;, &#39;ie 9&#39;]
      },
      multiple_files: {
         expand: true,
         flatten: true,
         src: &#39;build/tmp/app.css&#39;,
         dest: &#39;build/&#39;
      }
   }
});

grunt.loadNpmTasks(&#39;grunt-contrib-less&#39;);
grunt.loadNpmTasks(&#39;grunt-autoprefixer&#39;);

grunt.registerTask(&#39;css&#39;, [&#39;less&#39;, &#39;autoprefixer&#39;]);
</code></pre></div>
<p>다음은 Gulp 에서 사용하는 gulpfile.js 입니다. Nodejs 코드와 동일한 것을 알 수 있습니다.
```
var gulp = require(&#39;gulp&#39;),
var less = require(&#39;gulp-less&#39;),
var autoprefix = require(&#39;gulp-autoprefixer&#39;);</p>

<p>gulp.task(&#39;css&#39;, function () {
   gulp.src(&#39;assets/app.less&#39;)
      .pipe(less())
      .pipe(autoprefix(&#39;last 2 version&#39;, &#39;ie 8&#39;, &#39;ie 9&#39;))
      .pipe(gulp.dest(&#39;build&#39;));
});
```</p>

<h4>gulpfile.js</h4>

<p>Gulp 도 Gruntfile.js 와 같이 실행될 테스크가 명시되어 있는 파일이 필요합니다. gulpfile.js 라고 불리며 프로젝트의 루트에 존재하여야 합니다. 아래는 간단한 gulpfile.js 의 예제입니다.</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">var gulp = require(&#39;gulp&#39;);

gulp.task(&#39;default&#39;, function() {
  // 여기에 default 테스크 코드를 작성합니다.
});
</code></pre></div>
<p>Nodejs 코드와 같이 <code>gulp</code> 를 로딩하고 <code>gulp.task</code> API 를 통해서 테스크를 등록하고 있습니다. 더 자세한 API 는 아래 자료를 참고하세요.</p>

<ul>
<li><a href="http://goo.gl/p8K32Q">gulp/API.md at master · gulpjs/gulp</a></li>
</ul>

<h3>Gulp 실행</h3>

<p>gulp 를 실행 시키기 위해서는 Grunt 와 동일한 방식을 아래 처럼 사용합니다.</p>
<div class="highlight"><pre><code class="language-text" data-lang="text"># default 테스크 호출
gulp

# uglify 테스크 호출
gulp uglify
</code></pre></div>
<h3>Gulp 테스크 구현하기</h3>

<p>이제 좀 더 복잡한 테스크를 구현해 보겠습니다. Grunt 에서 보았던 uglify 라는 작업을 해보도록 하겠습니다. 여기서도 추가 플로그인을 위해서는 <code>npm</code> 명령을 통해서 설치합니다. Gulp 플러그인은 <code>gulp-</code> prefix 로 시작합니다.</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">npm install --save-dev gulp-uglify
</code></pre></div>
<p>다음 gulpfile.js 를 아래처럼 코딩 합니다.</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">&#39;use strict&#39;;

var gulp = require(&#39;gulp&#39;);
var uglify = require(&#39;gulp-uglify&#39;);

// package.json 에서 name 을 읽어 들이는 함수를 선언
var getProjectName = function() {
  require(&#39;./package.json&#39;).name;
};

// uglify 테스크 구현
gulp.task(&#39;uglify&#39;, function() {
  var name = getProjectName();

  return gulp.src(&#39;src/&#39; + name + &#39;.js&#39;)
      .pipe(uglify({mangle: false}))
      .pipe(gulp.dest(&#39;build/&#39; + name + &#39;.min.js&#39;));
  };
});

// default 테스크
gulp.task(&#39;default&#39;, [&#39;uglify&#39;]);
</code></pre></div>
<p>gulpfile.js 는 Nodejs 소스코드와 동일합니다. Grunt 에서 사용한 템플릿변수와 init 과정에서 설정값을 넘기는 것과 다르게 <code>require()</code> 를 사용하여 플러그인을 로딩하고 일반 함수를 선언할 수 있으며 Nodejs 의 Stream 을 이용해서 테스크의 과정을 구현합니다. 위에 코드에서는 <code>gulp.src</code> 를 통해서 정해진 소스파일을 읽어서 <code>uglify()</code> 테스크로 <code>gulp.pipe</code> 를 이용하여 스트림을 넘깁니다. <code>uglify</code> 테스크 수행후에 최종적으로 <code>gulp.dest</code> 에서 대상파일을 쓰게 됩니다.</p>

<p>좀 더 다양한 예제는 아래 자료를 참고하세요.</p>

<ul>
<li><a href="http://goo.gl/u7xjlk">gulp/docs/recipes at master · gulpjs/gulp</a></li>
</ul>

<h3>Gulp or Grunt?</h3>

<p>현재 gulp 는 여러 추가 플러그인이 개발되었지만 아직은 Grunt 에 비해서 충분히 보급되거나 커뮤니티가 확장되지 않고 문서화가 잘 이루어지지 상황입니다. 하지만 <a href="http://goo.gl/zgpqqA">Yeoman</a> 과 <a href="http://goo.gl/YNV3lb">Web Starter Kit</a> 에 사용되고 있고 앞으로 다른 프로젝트에서도 사용될 것임으로 익혀두는 것이 좋을 것입니다. [이 사이트의 Starter Kits 에서는 두가지 버전을 모두 제공하고 있습니다.]</p>

<h2>References</h2>

<ul>
<li><a href="http://goo.gl/agi7g">Getting started - Grunt: The JavaScript Task Runner</a></li>
<li><a href="http://goo.gl/rzpTVZ">gulp/getting-started.md at master · gulpjs/gulp</a></li>
<li><a href="http://goo.gl/fcaOPF">Build Wars: Gulp vs Grunt</a></li>
<li><a href="http://goo.gl/cZ3bHS">Building With Gulp | Smashing Magazine</a></li>
</ul>

        </div>

        <div class="media_content media_item shadow_panel">
            <p>Tags : <a href="/tags/grunt build yeoman">grunt build yeoman</a>&nbsp;</p>
        </div>


        <div class="media_content media_item shadow_panel">
            <div id="disqus_thread"></div>
<script type="text/javascript">
    /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
    var disqus_shortname = 'html5krforkisa'; // required: replace example with your forum shortname

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
</script>
<noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
<a href="http://disqus.com" class="dsq-brlink">comments powered by <span class="logo-disqus">Disqus</span></a>
    
        </div>

    </div>


    <script>
        $('#main_content').toc();

        $(document).ready(function(){
            $('#toc_location').affix({
                offset:{
                    top: function(){
                        return 550;
                    }
                }
            });
        })
    </script>
</div>
<footer>
<table width="100%" height="80" class="footer">
    <tr>
        <td align="center" class="footer_content">
            WebFrameworks.kr @since 2015
        </td>
    </tr>
</table>
</footer>
<script>
    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
        (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
            m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-56520981-1', 'auto');
    ga('send', 'pageview');

</script>
</body>
</html>